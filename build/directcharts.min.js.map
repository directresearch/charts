{"version":3,"sources":["webpack://directcharts/webpack/universalModuleDefinition","webpack://directcharts/webpack/bootstrap","webpack://directcharts/./src/base.js","webpack://directcharts/./src/pie.js","webpack://directcharts/./src/callbacks.js","webpack://directcharts/./src/nps.js","webpack://directcharts/./src/column.js","webpack://directcharts/./src/prijsmeter.js","webpack://directcharts/./src/bar.js","webpack://directcharts/(webpack)/buildin/module.js","webpack://directcharts/./node_modules/chroma-js/chroma.js","webpack://directcharts/./src/colors.js","webpack://directcharts/./src/chart.js","webpack://directcharts/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_colors","Base","_classCallCheck","this","categories","series","numberOfDataPoints","numberOfSeries","fontSize","decimals","settings","parseFontSize","fontSizeSmaller","parseDecimals","baseOptions","credits","enabled","title","subtitle","legend","plotOptions","plotoptions","xAxis","yAxis","colors","tooltip","size","parseInt","decimalsValue","type","chartTitle","text","style","chartSubtitle","legendEnabled","align","verticalAlign","layout","legendaPositie","padding","itemStyle","stacked","colorByPoint","percentages","dataLabelsInside","stacking","dataLabels","inside","format","textOutline","visible","axis","as","length","gridLineWidth","minorGridLineWidth","min","undefined","max","labels","scale","raster","numberOfColors","colorPalet","_colors2","default","renderColors","stackedTooltip","notStackedTooltip","headerFormat","pointFormat","footerFormat","useHTML","shared","exportSettings","exportOptions","chartOptions","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","next","done","serieName","serie","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","element","indexOf","push","y","err","return","console","log","_base","Pie","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","parseData","chart","chartType","piePlotoptions","exporting","existingOptions","pie","cursor","formatter","point","distance","color","showInLegend","piedata","round","result","Number","Math","lineIntersection","p0","p1","p2","p3","s1X","s1Y","s2X","s2Y","t","p0X","x","p0Y","p1X","p1Y","p2X","p2Y","p3X","p3Y","intersections","points1","points","points2","points3","points4","pointsInterSect1","pointsInterSect2","pointsInterSect3","pointsInterSect4","i1","intersect1","intersect2","intersect3","intersect4","addPoint","redraw","_pie","Nps","Column","Prijsmeter","parseNpsData","line","marker","key","startValue","stepSize","concat","Bar","webpackPolyfill","deprecate","paths","children","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","luminance_x","multiply","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","screen","sin","sqrt","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","ref","split","toLowerCase","obj","strType","toString","args","Array","rgb","_clipped","_unclipped","arguments","func","ctor","child","apply","__WEBPACK_AMD_DEFINE_RESULT__","version","arg","chk","len1","me","mode","w","_rgb","sort","a","b","test","warn","hex","clone","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","z","isNaN","Yn","Xn","Zn","t1","t2","t0","Kn","t3","g","ref1","lab","I","I0","I1","lab0","lab1","lab2","lab3","ref2","f","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","h","random","code","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","lrgb","xyz0","xyz1","xyz","average","A","cnt","dx","dy","first","xyz2","splice","u","match","substr","css","channels","hxa","str","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","eps","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","delA","delB","delC","h1","sc","sl","v1","v2","v3","modechan","channel","src","set","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","out","analyze","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","numColors","dd","dm","samples","cache","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","_chromaJs","Colors","drColors","redBlueColors","redColors","blueColors","greenColors","orangeColors","_chromaJs2","rood","blauw","groen","geel","yellowColors","zwart","blackColors","colorsDr","counter","reversed","roodReversed","blauwReversed","Chart","typeChart","chartObject","validateChartType","alert","_typeof","_pie2","_nps2","_bar2","_prijsmeter2","_column2","renderOptions","_chart","_callbacks"],"mappings":"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","file":"directcharts.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"directcharts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"directcharts\"] = factory();\n\telse\n\t\troot[\"directcharts\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","// Import chroma js\r\nimport ColorGenerator from './colors.js';\r\n\r\nexport default class Base {\r\n  constructor() {\r\n    this.categories = [];\r\n    this.series = [];\r\n    this.numberOfDataPoints = 1;\r\n    this.numberOfSeries = 1;\r\n    this.fontSize = '11px';\r\n    this.decimals = 1;\r\n  }\r\n\r\n  /**\r\n   * Return base options that are not chart type specific\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  baseOptions(settings) {\r\n\r\n    if (settings) {\r\n      // change fontsize, only available when using baseoptions before other functions\r\n      this.fontSize = this.parseFontSize(settings, 'default');\r\n      // smaller frontsize 2 px less then fontsize, only available when using baseoptions before other functions\r\n      this.fontSizeSmaller = this.parseFontSize(settings, 'smaller');\r\n      // change decimals, only available when using baseoptions before other functions\r\n      this.decimals = this.parseDecimals(settings);\r\n      // some base options that are not chart type specific\r\n      let baseOptions = {\r\n        credits: {\r\n          enabled: false\r\n        }\r\n      };\r\n\r\n      // add title\r\n      baseOptions.title = this.title(settings);\r\n      // add subtitle\r\n      baseOptions.subtitle = this.subtitle(settings);\r\n      // add legend\r\n      baseOptions.legend = this.legend(settings);\r\n      // add plotoptions\r\n      baseOptions.plotOptions = this.plotoptions(settings);\r\n      // add xAxis\r\n      baseOptions.xAxis = this.xAxis(settings);\r\n      // add yAxis\r\n      baseOptions.yAxis = this.yAxis(settings);\r\n      // series\r\n      baseOptions.series = this.series;\r\n      // add colors\r\n      baseOptions.colors = this.colors(settings);\r\n      // add tooltip\r\n      baseOptions.tooltip = this.tooltip(settings);\r\n\r\n      return baseOptions;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return fontsize in px\r\n   * @param string type\r\n   * @return Object\r\n   */\r\n  parseFontSize(settings, size) {\r\n    let fontSize = 11;\r\n\r\n    if (settings) {\r\n      fontSize = settings.fontSize;\r\n    }\r\n\r\n    if (size === 'smaller') {\r\n      return parseInt(fontSize, 10) - 2 + 'px';\r\n    }\r\n    return parseInt(fontSize, 10) + 'px';\r\n  }\r\n\r\n  /**\r\n   * Return number of decimals\r\n   * @param integer type\r\n   * @return Object\r\n   */\r\n  parseDecimals(settings) {\r\n    let decimalsValue = 0;\r\n\r\n    if (settings) {\r\n      decimalsValue = settings.decimalsValue;\r\n    }\r\n    return parseInt(decimalsValue, 10);\r\n  }\r\n\r\n  /**\r\n   * Return the correct chart type https://api.highcharts.com/highcharts/chart.type\r\n   * @param string type\r\n   * @return Object\r\n   */\r\n  chartType(type) {\r\n    return {\r\n      type: type\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return title, The chart's main title.\r\n   * https://api.highcharts.com/highcharts/title\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  title(settings) {\r\n    let chartTitle = '';\r\n\r\n    if (settings) {\r\n      chartTitle = settings.chartTitle;\r\n    }\r\n\r\n    return {\r\n      text: chartTitle,\r\n      style: {\r\n        fontSize: this.fontSize\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return subtitle, The chart's subtitle.\r\n   * This can be used both to display a subtitle below the main title, and to display random text anywhere in the chart.\r\n   * The subtitle can be updated after chart initialization through the Chart.setTitle method.\r\n   * https://api.highcharts.com/highcharts/subtitle\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  subtitle(settings) {\r\n    let chartSubtitle = '';\r\n\r\n    if (settings) {\r\n      chartSubtitle = settings.chartSubtitle;\r\n    }\r\n\r\n    return {\r\n      text: chartSubtitle,\r\n      style: {\r\n        fontSize: this.fontSizeSmaller\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return legend, The legend is a box containing a symbol and name for each series item or point item in the chart.\r\n   * Each series (or points in case of pie charts) is represented by a symbol and its name in the legend.\r\n   * https://api.highcharts.com/highcharts/legend\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  legend(settings) {\r\n    // set legend\r\n    // default = disabled\r\n    // if there are multiple series then enable\r\n    let legendEnabled = false;\r\n\r\n    // legenda position default onder\r\n    let align = 'center';\r\n    let verticalAlign = 'bottom';\r\n    let layout = 'horizontal';\r\n    let padding = 20;\r\n    let legendaPositie = 'boven';\r\n\r\n    if (settings) {\r\n      legendaPositie = settings.legendaPositie;\r\n    }\r\n\r\n    // always show legend if we should generate a pie like chart\r\n    if (this.numberOfSeries > 1) {\r\n      legendEnabled = true;\r\n    }\r\n\r\n    if (legendaPositie === 'rechts') {\r\n      align = 'right';\r\n      verticalAlign = 'top';\r\n      layout = 'vertical';\r\n    }\r\n\r\n    return {\r\n      enabled: legendEnabled,\r\n      align: align,\r\n      verticalAlign: verticalAlign,\r\n      layout: layout,\r\n      padding: padding,\r\n      itemStyle: {\r\n        fontSize: this.fontSize\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  plotoptions(settings) {\r\n    let stacked = false;\r\n    let colorByPoint = true;\r\n    let percentages = true;\r\n    let dataLabelsInside = false;\r\n    let type = '';\r\n\r\n    if (settings) {\r\n      stacked = settings.stacked;\r\n      percentages = settings.percentages;\r\n      type = settings.type;\r\n    }\r\n\r\n    // Do we need to stack the series?\r\n    if (stacked === true) {\r\n      stacked = 'percent';\r\n      dataLabelsInside = true;\r\n    }\r\n\r\n    // Don't show percentages in dataLabels if requested\r\n    if (percentages === false) {\r\n      percentages = false;\r\n    }\r\n\r\n    // Do we show multiple series, then color by serie instead of by point\r\n    if (type === 'series') {\r\n      colorByPoint = false;\r\n    }\r\n\r\n    return {\r\n      series: {\r\n        stacking: stacked,\r\n        colorByPoint: colorByPoint, // https://api.highcharts.com/highcharts/series.bar.colorByPoint\r\n        dataLabels: {\r\n          enabled: percentages, // https://api.highcharts.com/highcharts/series.bar.dataLabels.enabled\r\n          inside: dataLabelsInside, // https://api.highcharts.com/highcharts/series.bar.dataLabels.inside\r\n          format: '{y:.' + this.decimals + 'f}%',\r\n          style: {\r\n            fontSize: this.fontSize,\r\n            textOutline: 'none'\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return xAxis\r\n   * The X axis or category axis.\r\n   * Normally this is the horizontal axis, though if the chart is inverted this is the vertical axis.\r\n   * In case of multiple axes, the xAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/xAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  xAxis(settings) {\r\n    let gridLineWidth = 0;\r\n    let categories = [];\r\n    let visible = true;\r\n    let axis = true;\r\n    let type = 'serie';\r\n\r\n    if (settings) {\r\n      axis = settings.as;\r\n      type = settings.type;\r\n    }\r\n\r\n    // don't show xAxis if requested or when we parse series with one data point\r\n    if ((type === 'series' && this.numberOfDataPoints === 1) || axis === false) {\r\n      visible = false;\r\n    }\r\n\r\n    // are there categories? Show them\r\n    categories = this.categories.length > 0 ? this.categories : [];\r\n\r\n    return {\r\n      categories: categories,\r\n      visible: visible,\r\n      gridLineWidth: gridLineWidth,\r\n      minorGridLineWidth: gridLineWidth,\r\n      min: undefined,\r\n      max: undefined,\r\n      labels: {\r\n        style: {\r\n          fontSize: this.fontSize\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return yAxis\r\n   * The Y axis or value axis.\r\n   * Normally this is the vertical axis, though if the chart is inverted this is the horizontal axis.\r\n   * In case of multiple axes, the yAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/yAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  yAxis(settings) {\r\n    let gridLineWidth = 0;\r\n    let visible = false;\r\n    let title = false;\r\n    let max = settings.scale > 0 ? settings.scale : undefined; // do we need a different scale?\r\n    let min = 0;\r\n    let raster = false;\r\n\r\n    if (settings) {\r\n      raster = settings.raster;\r\n    }\r\n\r\n    // hulplijnen tonen aan/uit\r\n    if (raster === true) {\r\n      visible = true;\r\n      gridLineWidth = 1;\r\n    }\r\n\r\n    return {\r\n      title: title,\r\n      visible: visible,\r\n      gridLineWidth: gridLineWidth,\r\n      minorGridLineWidth: gridLineWidth,\r\n      min: min,\r\n      max: max,\r\n      labels: {\r\n        style: {\r\n          fontSize: this.fontSize\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return list of Generator\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  colors(settings) {\r\n    let numberOfColors = this.numberOfDataPoints;\r\n    let colorPalet = 'dr';\r\n    let type = 'serie';\r\n\r\n    if (settings) {\r\n      colorPalet = settings.colorPalet;\r\n      type = settings.type;\r\n    }\r\n\r\n    // Show a table fomatted tooltip\r\n    if (type === 'series') {\r\n      numberOfColors = this.numberOfSeries;\r\n    }\r\n\r\n    // initiate Color class\r\n    let Color = new ColorGenerator(colorPalet, numberOfColors);\r\n\r\n    return Color.renderColors();\r\n  }\r\n\r\n  /**\r\n   * Return tooltip\r\n   * Options for the tooltip that appears when the user hovers over a series or point.\r\n   * https://api.highcharts.com/highcharts/tooltip\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  tooltip(settings) {\r\n    let type = 'serie';\r\n\r\n    if (settings) {\r\n      type = settings.type;\r\n    }\r\n\r\n    // Show a table fomatted tooltip\r\n    if (type === 'series' && this.numberOfDataPoints > 1) {\r\n      return this.stackedTooltip(settings);\r\n    }\r\n\r\n    // Show a regular non table formatted tooltip\r\n    return this.notStackedTooltip(settings);\r\n  }\r\n\r\n  /**\r\n   * Return a table fomatted tooltip\r\n   * http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/tooltip/footerformat/\r\n   * https://api.highcharts.com/highcharts/tooltip.useHTML\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  stackedTooltip(settings) {\r\n    return {\r\n      headerFormat: '{point.key}<hr><table>',\r\n      pointFormat: '<tr><td>{series.name}: </td>' +\r\n            '<td style=\"text-align: right\">{point.y:.' + this.decimals + 'f}% / {point.n}</td></tr>',\r\n      footerFormat: '</table>',\r\n      useHTML: true,\r\n      shared: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a regular non html formatted tooltip\r\n   * https://api.highcharts.com/highcharts/tooltip.pointFormat\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  notStackedTooltip(settings) {\r\n    let pointFormat = '{series.name}: {point.y:.' + this.decimals + 'f}% <br> n = {point.n:.0f}';\r\n\r\n    /**\r\n     * Toon geen serie naam als er geen meerdere series zijn\r\n     */\r\n    if (settings.type === 'serie') {\r\n      pointFormat = '{point.y:.' + this.decimals + 'f}% <br> n = {point.n:.0f}';\r\n    }\r\n\r\n    return {\r\n      headerFormat: '',\r\n      pointFormat: pointFormat\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return exporting Options for the exporting module. For an overview on the matter, see\r\n   * https://api.highcharts.com/highcharts/exporting\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  exporting(exportSettings) {\r\n    let exportOptions = {\r\n      enabled: true,\r\n      chartOptions: {}\r\n    };\r\n\r\n    if (exportSettings) {\r\n      // change fontsize, only available when using baseoptions before other functions\r\n      this.fontSize = this.parseFontSize(exportSettings, 'default');\r\n      // smaller frontsize 2 px less then fontsize, only available when using baseoptions before other functions\r\n      this.fontSizeSmaller = this.parseFontSize(exportSettings, 'smaller');\r\n      // change decimals, only available when using baseoptions before other functions\r\n      this.decimals = this.parseDecimals(exportSettings);\r\n      // add title\r\n      exportOptions.chartOptions.title = this.title(exportSettings);\r\n      // add subtitle\r\n      exportOptions.chartOptions.subtitle = this.subtitle(exportSettings);\r\n      // add legend\r\n      exportOptions.chartOptions.legend = this.legend(exportSettings);\r\n      // add plotOptions\r\n      exportOptions.chartOptions.plotOptions = this.plotoptions(exportSettings);\r\n      // add xAxis\r\n      exportOptions.chartOptions.xAxis = this.xAxis(exportSettings);\r\n      // add yAxis\r\n      exportOptions.chartOptions.yAxis = this.yAxis(exportSettings);\r\n      // add colors\r\n      exportOptions.chartOptions.colors = this.colors(exportSettings);\r\n\r\n      return exportOptions;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  parseData(data) {\r\n    for (let serieName of Object.keys(data)) {\r\n      let serie = {\r\n        'name': serieName,\r\n        'data': []\r\n      };\r\n\r\n      // loop over series to add categories and data\r\n      for (let element of data[serieName]) {\r\n        // add categories\r\n        if (this.categories.indexOf(element.name) === -1) {\r\n          this.categories.push(element.name);\r\n        }\r\n        // add data\r\n        serie.data.push({\r\n          y: element.data,\r\n          n: element.n\r\n        });\r\n        serie.y = element.data;\r\n      }\r\n\r\n      // count number of datapoints\r\n      this.numberOfDataPoints = serie.data.length;\r\n      // add new series to existing series\r\n      this.series.push(serie);\r\n    }\r\n    console.log(this.series);\r\n    this.numberOfSeries = this.series.length;\r\n  }\r\n}\r\n\r\n// list of available settings\r\n// settings without custom export settings\r\n// {\r\n//   \"cumulatief\": \"aan\",\r\n//   \"hideCumulative\": false,\r\n//   \"typeChart\": \"bar\",\r\n//   \"stacked\": false,\r\n//   \"decimalsValue\": 0,\r\n//   \"legendaPositie\": \"onder\",\r\n//   \"colorPalet\": \"blauw-rood\",\r\n//   \"chartTitle\": \"\",\r\n//   \"chartSubtitle\": \"\",\r\n//   \"percentages\": true,\r\n//   \"as\": true,\r\n//   \"raster\": true,\r\n//   \"scale\": 0,\r\n//   \"fontSize\": 11,\r\n//   \"type\": \"serie\"\r\n// }\r\n// setting with custom export settings\r\n// {\r\n//   \"settings\": {\r\n//     \"cumulatief\": \"aan\",\r\n//     \"hideCumulative\": false,\r\n//     \"typeChart\": \"bar\",\r\n//     \"stacked\": false,\r\n//     \"decimalsValue\": 0,\r\n//     \"aPositie\": \"onder\",\r\n//     \"colorPalet\": \"blauw-rood\",\r\n//     \"chartTitle\": \"\",\r\n//     \"chartSubtitle\": \"\",\r\n//     \"percentages\": true,\r\n//     \"as\": true,\r\n//     \"raster\": true,\r\n//     \"scale\": 0,\r\n//     \"fontSize\": 11,\r\n//     \"type\": \"serie\"\r\n//   },\r\n//   \"export\": {\r\n//     \"cumulatief\": \"uit\",\r\n//     \"hideCumulative\": true,\r\n//     \"typeChart\": \"bar\",\r\n//     \"stacked\": false,\r\n//     \"decimalsValue\": 0,\r\n//     \"legendaPositie\": \"rechts\",\r\n//     \"colorPalet\": \"rood-blauw\",\r\n//     \"chartTitle\": \"\",\r\n//     \"chartSubtitle\": \"\",\r\n//     \"percentages\": false,\r\n//     \"as\": false,\r\n//     \"raster\": false,\r\n//     \"scale\": 100,\r\n//     \"fontSize\": 13,\r\n//     \"type\": \"series\"\r\n//   }\r\n// }\r\n","import Base from './base';\r\n\r\nexport default class Pie extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n    let plotOptions = this.plotoptions(settings);\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('pie');\r\n      // add pie plotoptions\r\n      baseOptions.plotOptions = this.piePlotoptions(settings, plotOptions);\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  piePlotoptions(settings, existingOptions) {\r\n    existingOptions.pie = {\r\n      cursor: 'pointer',\r\n      dataLabels: {\r\n        enabled: true,\r\n        formatter: function () {\r\n          return this.point.y + ' %';\r\n        },\r\n        distance: -30,\r\n        color: 'white'\r\n      },\r\n      showInLegend: true\r\n    };\r\n    return existingOptions;\r\n  }\r\n\r\n  parseData(data) {\r\n    for (let serieName of Object.keys(data)) {\r\n      let serie = {\r\n        'name': serieName,\r\n        'data': [],\r\n        'y': 0\r\n      };\r\n\r\n      // loop over series to add categories and data\r\n      for (let element of data[serieName]) {\r\n        // add categories\r\n        if (this.categories.indexOf(element.name) === -1) {\r\n          this.categories.push(element.name);\r\n        }\r\n        // add data\r\n        serie.data.push(element.data);\r\n        serie.y = element.data;\r\n      }\r\n\r\n      // count number of datapoints\r\n      this.numberOfDataPoints = serie.data.length;\r\n      // add new series to existing series\r\n      this.series.push(serie);\r\n    }\r\n    this.numberOfSeries = this.series.length;\r\n    // pi specific\r\n    let piedata = [{\r\n      data: this.series,\r\n      colorByPoint: true\r\n    }];\r\n\r\n    this.series = piedata;\r\n  }\r\n};\r\n","export function round(value, decimals) {\r\n  let result = Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r\n\r\n  return result >= 0 ? result : 0;\r\n}\r\n\r\nexport function lineIntersection(p0, p1, p2, p3) {\r\n\r\n  let p0X = p0.x;\r\n  let p0Y = p0.y;\r\n  let p1X = p1.x;\r\n  let p1Y = p1.y;\r\n  let p2X = p2.x;\r\n  let p2Y = p2.y;\r\n  let p3X = p3.x;\r\n  let p3Y = p3.y;\r\n  let s1X, s1Y, s2X, s2Y, s, t;\r\n\r\n  s1X = p1X - p0X;\r\n  s1Y = p1Y - p0Y;\r\n  s2X = p3X - p2X;\r\n  s2Y = p3Y - p2Y;\r\n\r\n  s = (-s1Y * (p0X - p2X) + s1X * (p0Y - p2Y)) / (-s2X * s1Y + s1X * s2Y);\r\n  t = (s2X * (p0Y - p2Y) - s2Y * (p0X - p2X)) / (-s2X * s1Y + s1X * s2Y);\r\n\r\n  if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\r\n    return [round(p0X + (t * s1X), 2), round(p0Y + (t * s1Y), 2)];\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function intersections(chart) {\r\n\r\n  let points1 = chart.series[0].points; // goedkoop\r\n  let points2 = chart.series[2].points; // duur\r\n  let points3 = chart.series[1].points; // te_goedkoop\r\n  let points4 = chart.series[3].points; // te_duur\r\n  let pointsInterSect1 = chart.series[4]; // IDP\r\n  let pointsInterSect2 = chart.series[5]; // OPS\r\n  let pointsInterSect3 = chart.series[6]; // MGP\r\n  let pointsInterSect4 = chart.series[7]; // MDP\r\n  let i1, intersect1, intersect2, intersect3, intersect4;\r\n\r\n  for (i1 = 1; i1 < points1.length; i1++) {\r\n    intersect1 = lineIntersection(points1[i1 - 1], points1[i1], points2[i1 - 1], points2[i1]);\r\n    intersect2 = lineIntersection(points3[i1 - 1], points3[i1], points4[i1 - 1], points4[i1]);\r\n    intersect3 = lineIntersection(points3[i1 - 1], points3[i1], points2[i1 - 1], points2[i1]);\r\n    intersect4 = lineIntersection(points1[i1 - 1], points1[i1], points4[i1 - 1], points4[i1]);\r\n\r\n    if (intersect1) {\r\n      pointsInterSect1.addPoint(intersect1, false, false);\r\n    }\r\n    if (intersect2) {\r\n      pointsInterSect2.addPoint(intersect2, false, false);\r\n    }\r\n    if (intersect3) {\r\n      pointsInterSect3.addPoint(intersect3, false, false);\r\n    }\r\n    if (intersect4) {\r\n      pointsInterSect4.addPoint(intersect4, false, false);\r\n    }\r\n  }\r\n  // Functional but disabled for now ;-)\r\n  // addLabelsToIntersection(pointsInterSect1, 'IDP', chart, 30, 35);\r\n  // addLabelsToIntersection(pointsInterSect2, 'OPS', chart, -30, -35);\r\n  // addLabelsToIntersection(pointsInterSect3, 'MGP', chart, 30, 35);\r\n  // addLabelsToIntersection(pointsInterSect4, 'MDP', chart, -30, -35);\r\n  // redraw\r\n  chart.redraw();\r\n}\r\n","import Pie from './pie';\r\n\r\nexport default class Nps extends Pie {\r\n  constructor(data) {\r\n    super(data);\r\n  }\r\n};\r\n","import Base from './base';\r\n\r\nexport default class Column extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('column');\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n}\r\n","import Base from './base';\r\n\r\nexport default class Prijsmeter extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseNpsData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('line');\r\n      // add plotoptions\r\n      baseOptions.plotOptions = this.plotoptions(settings);\r\n      // add xAxis\r\n      baseOptions.xAxis = this.xAxis(settings);\r\n      // add yAxis\r\n      baseOptions.yAxis = this.yAxis(settings);\r\n      // add colors\r\n      baseOptions.colors = this.colors(settings);\r\n      // add tooltip\r\n      baseOptions.tooltip = this.tooltip(settings);\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n  /**\r\n   * Return list of Generator\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  colors(settings) {\r\n    return ['#009bd5', '#e2001a', '#57ab27', '#ffcc00'];\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  plotoptions(settings) {\r\n    return {\r\n      line: {\r\n        marker: {\r\n          enabled: false\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return xAxis\r\n   * The X axis or category axis.\r\n   * Normally this is the horizontal axis, though if the chart is inverted this is the vertical axis.\r\n   * In case of multiple axes, the xAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/xAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  xAxis(settings) {\r\n    let categories = [];\r\n\r\n    // are there categories? Show them\r\n    categories = this.categories.length > 0 ? this.categories : [];\r\n\r\n    return {\r\n      categories: categories\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return tooltip\r\n   * Options for the tooltip that appears when the user hovers over a series or point.\r\n   * https://api.highcharts.com/highcharts/tooltip\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  tooltip(settings) {\r\n    return {\r\n      formatter: function () {\r\n        let value = this.key;\r\n        let startValue, stepSize;\r\n\r\n        // er kunnen numerieke en textuele nummers terug komen van highcharts\r\n        // de textuele kunnen direct doorgezet worden, de numerieke moeten uitgerekend worden\r\n        if (typeof this.x === 'number') {\r\n          startValue = Number(this.point.series.xAxis.categories[0]);\r\n          stepSize = Number(Number(this.point.series.xAxis.categories[1]) - startValue);\r\n          value = Number(startValue + Number(Number(stepSize) * Number(this.x)));\r\n        }\r\n\r\n        return '<span style=\"font-size:10px\">' + this.series.name + '</span><table><br>' +\r\n          '<tr> <span style=\"font-size:10px\">' + value + ': </span><table> <td style=\"padding:0;font-size:10px\">' +\r\n          this.y + '%</td></tr>';\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return yAxis\r\n   * The Y axis or value axis.\r\n   * Normally this is the vertical axis, though if the chart is inverted this is the horizontal axis.\r\n   * In case of multiple axes, the yAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/yAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  yAxis(settings) {\r\n    return {\r\n      title: {\r\n        text: ''\r\n      },\r\n      max: 100\r\n    };\r\n  }\r\n\r\n  parseNpsData(data) {\r\n    this.parseData(data);\r\n    // add intersection points\r\n    let intersections = [{\r\n      name: 'IDP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'OPS',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'MGP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'MDP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    }];\r\n\r\n    // push intersections to series\r\n    this.series = this.series.concat(intersections);\r\n  }\r\n}\r\n","import Base from './base';\r\n\r\nexport default class Bar extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('bar');\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n}\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","// Import chroma js\r\nimport Chroma from 'chroma-js';\r\n\r\nexport default class Colors {\r\n  constructor(type, numberOfColors) {\r\n    this.type = type;\r\n    this.numberOfColors = numberOfColors;\r\n  }\r\n\r\n  /**\r\n   * Return list of colors\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  renderColors() {\r\n    // Show a table fomatted tooltip\r\n    if (this.type === 'dr') {\r\n      return this.drColors();\r\n    }\r\n    if (this.type === 'rood-blauw') {\r\n      return this.redBlueColors(false);\r\n    }\r\n    if (this.type === 'blauw-rood') {\r\n      return this.redBlueColors(true);\r\n    }\r\n    if (this.type === 'rood') {\r\n      return this.redColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'blauw') {\r\n      return this.blueColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'groen') {\r\n      return this.greenColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'oranje') {\r\n      return this.orangeColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'rood-mono') {\r\n      return ['#e2001a'];\r\n    }\r\n    if (this.type === 'blauw-mono') {\r\n      return ['#009bd5'];\r\n    }\r\n    if (this.type === 'groen-mono') {\r\n      return ['#57ab27'];\r\n    }\r\n    if (this.type === 'oranje-mono') {\r\n      return ['#ed8c00'];\r\n    }\r\n    return Chroma.scale(['#4f0700', '#e2001a', '#f6b2ba']).colors(this.numberOfColors);\r\n  }\r\n\r\n  drColors() {\r\n    let numberOfColors = this.numberOfColors / 5;\r\n    let rood = this.redColors(numberOfColors, 2);\r\n    let blauw = this.blueColors(numberOfColors, 2);\r\n    let groen = this.greenColors(numberOfColors, 2);\r\n    let geel = this.yellowColors(numberOfColors, 2);\r\n    let zwart = this.blackColors(numberOfColors, 2);\r\n    let colorsDr = [];\r\n    let counter = 0;\r\n\r\n    for (counter = 0; counter < numberOfColors; counter++) {\r\n      colorsDr.push(rood[counter]);\r\n      colorsDr.push(blauw[counter]);\r\n      colorsDr.push(groen[counter]);\r\n      colorsDr.push(geel[counter]);\r\n      colorsDr.push(zwart[counter]);\r\n    }\r\n\r\n    return colorsDr;\r\n  }\r\n\r\n  redBlueColors(reversed) {\r\n    let numberOfColors = this.numberOfColors / 2;\r\n    let rood = this.redColors(numberOfColors, 2);\r\n    let blauw = this.blueColors(numberOfColors, 2);\r\n    var roodReversed = this.redColors(numberOfColors).reverse();\r\n    var blauwReversed = this.blueColors(numberOfColors).reverse();\r\n\r\n    if (reversed) {\r\n      return blauw.concat(roodReversed);\r\n    }\r\n    return rood.concat(blauwReversed);\r\n  }\r\n\r\n  redColors(numberOfColors, spread) {\r\n    let colors = ['#e2001a', '#f6b2ba'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#4f0700', '#e2001a', '#f6b2ba'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  blueColors(numberOfColors, spread) {\r\n    let colors = ['#009bd5', '#b2e1f2'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#003349', '#009bd5', '#b2e1f2'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  greenColors(numberOfColors, spread) {\r\n    let colors = ['#57ab27', '#cce6be'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#22440f', '#57ab27', '#cce6be'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  yellowColors(numberOfColors, spread) {\r\n    let colors = ['#ffcc00', '#fff0b2'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  orangeColors(numberOfColors, spread) {\r\n    let colors = ['#ad5103', '#ed8c00', '#f7c69c'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  blackColors(numberOfColors, spread) {\r\n    let colors = ['#000000', '#b2b2b2'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n}\r\n","import Pie from './pie.js';\r\nimport Bar from './bar.js';\r\nimport Prijsmeter from './prijsmeter.js';\r\nimport Column from './column.js';\r\nimport Nps from './nps.js';\r\n\r\nexport default class Chart {\r\n  chartOptions(settings, exportSettings, data) {\r\n    let chartType = settings.typeChart;\r\n    let chartObject = null;\r\n\r\n    // check if valid chartType is given\r\n    if (!this.validateChartType(chartType)) {\r\n      alert('no valid chart type is given');\r\n    }\r\n    // check if valid data is given\r\n    if (typeof data !== 'object') {\r\n      alert('no valid data is given');\r\n    }\r\n    // render pie\r\n    if (chartType === 'pie') {\r\n      chartObject = new Pie(data);\r\n    }\r\n    // render nps\r\n    if (chartType === 'nps') {\r\n      chartObject = new Nps(data);\r\n    }\r\n    // render bar\r\n    if (chartType === 'bar') {\r\n      chartObject = new Bar(data);\r\n    }\r\n    // render prijsmeter\r\n    if (chartType === 'line') {\r\n      chartObject = new Prijsmeter(data);\r\n    }\r\n    // render column\r\n    if (chartType === 'column') {\r\n      chartObject = new Column(data);\r\n    }\r\n\r\n    return chartObject.renderOptions(settings, exportSettings);\r\n  }\r\n\r\n  validateChartType(chartType) {\r\n    let validTypes = ['bar', 'column', 'line', 'pie', 'nps'];\r\n\r\n    return validTypes.indexOf(chartType) >= 0;\r\n  }\r\n};\r\n","import Chart from './chart.js';\r\nimport { intersections } from './callbacks.js';\r\n\r\nexport { Chart, intersections };\r\n"],"sourceRoot":""}