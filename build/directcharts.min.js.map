{"version":3,"sources":["webpack://directcharts/webpack/universalModuleDefinition","webpack://directcharts/webpack/bootstrap","webpack://directcharts/./src/base.js","webpack://directcharts/./src/pie.js","webpack://directcharts/./src/callbacks.js","webpack://directcharts/./src/nps.js","webpack://directcharts/./src/column.js","webpack://directcharts/./src/prijsmeter.js","webpack://directcharts/./src/bar.js","webpack://directcharts/(webpack)/buildin/module.js","webpack://directcharts/./node_modules/chroma-js/chroma.js","webpack://directcharts/./src/colors.js","webpack://directcharts/./src/chart.js","webpack://directcharts/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_colors","Base","_classCallCheck","this","categories","series","numberOfDataPoints","numberOfSeries","fontSize","decimals","settings","parseFontSize","fontSizeSmaller","parseDecimals","baseOptions","credits","enabled","title","subtitle","legend","plotOptions","plotoptions","xAxis","yAxis","colors","tooltip","size","parseInt","decimalsValue","type","chartTitle","text","style","chartSubtitle","legendEnabled","align","verticalAlign","layout","legendaPositie","padding","itemStyle","stacked","colorByPoint","percentages","dataLabelsInside","stacking","dataLabels","inside","format","textOutline","visible","axis","as","length","gridLineWidth","minorGridLineWidth","min","undefined","max","labels","color","scale","raster","reversedStacks","numberOfColors","colorPalet","_colors2","default","renderColors","stackedTooltip","notStackedTooltip","headerFormat","pointFormat","footerFormat","useHTML","shared","exportSettings","exportOptions","chartOptions","chart","chartType","typeChart","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","next","done","serieName","serie","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","element","indexOf","push","y","err","return","_base","Pie","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","parseData","piePlotoptions","exporting","existingOptions","pie","cursor","distance","textShadow","showInLegend","piedata","round","result","Number","Math","lineIntersection","p0","p1","p2","p3","s1X","s1Y","s2X","s2Y","t","p0X","x","p0Y","p1X","p1Y","p2X","p2Y","p3X","p3Y","intersections","points1","points","points2","points3","points4","pointsInterSect1","pointsInterSect2","pointsInterSect3","pointsInterSect4","i1","intersect1","intersect2","intersect3","intersect4","addPoint","redraw","_pie","Nps","Column","Prijsmeter","parseNpsData","line","marker","formatter","key","startValue","stepSize","point","toFixed","concat","Bar","webpackPolyfill","deprecate","paths","children","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","multiply","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","screen","sin","sqrt","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","ref","split","toLowerCase","obj","strType","toString","args","Array","rgb","_clipped","_unclipped","arguments","func","ctor","child","apply","__WEBPACK_AMD_DEFINE_RESULT__","version","arg","chk","len1","me","mode","w","_rgb","sort","a","b","test","console","warn","hex","clone","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","z","isNaN","Yn","Xn","Zn","t1","t2","t0","Kn","t3","g","ref1","lab","I","I0","I1","lab0","lab1","lab2","lab3","ref2","f","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","h","random","code","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","lrgb","xyz0","xyz1","xyz","average","A","cnt","dx","dy","first","xyz2","splice","u","match","substr","css","channels","hxa","str","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","eps","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","delA","delB","delC","h1","sc","sl","v1","v2","v3","modechan","channel","src","set","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","out","analyze","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","numColors","dd","dm","samples","cache","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","_chromaJs","Colors","drColors","redBlueColors","redColors","blueColors","greenColors","orangeColors","_chromaJs2","rood","blauw","groen","geel","yellowColors","zwart","blackColors","colorsDr","counter","reversed","roodReversed","blauwReversed","Chart","chartObject","validateChartType","alert","_typeof","_pie2","_nps2","_bar2","_prijsmeter2","_column2","renderOptions","_chart","_callbacks"],"mappings":"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","file":"directcharts.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"directcharts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"directcharts\"] = factory();\n\telse\n\t\troot[\"directcharts\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","// Import chroma js\r\nimport ColorGenerator from './colors.js';\r\n\r\nexport default class Base {\r\n  constructor() {\r\n    this.categories = [];\r\n    this.series = [];\r\n    this.numberOfDataPoints = 1;\r\n    this.numberOfSeries = 1;\r\n    this.fontSize = '11px';\r\n    this.decimals = 0;\r\n  }\r\n\r\n  /**\r\n   * Return base options that are not chart type specific\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  baseOptions(settings) {\r\n\r\n    if (settings) {\r\n      // change fontsize, only available when using baseoptions before other functions\r\n      this.fontSize = this.parseFontSize(settings, 'default');\r\n      // smaller frontsize 2 px less then fontsize, only available when using baseoptions before other functions\r\n      this.fontSizeSmaller = this.parseFontSize(settings, 'smaller');\r\n      // change decimals, only available when using baseoptions before other functions\r\n      this.decimals = this.parseDecimals(settings);\r\n      // some base options that are not chart type specific\r\n      let baseOptions = {\r\n        credits: {\r\n          enabled: false\r\n        }\r\n      };\r\n\r\n      // add title\r\n      baseOptions.title = this.title(settings);\r\n      // add subtitle\r\n      baseOptions.subtitle = this.subtitle(settings);\r\n      // add legend\r\n      baseOptions.legend = this.legend(settings);\r\n      // add plotoptions\r\n      baseOptions.plotOptions = this.plotoptions(settings);\r\n      // add xAxis\r\n      baseOptions.xAxis = this.xAxis(settings);\r\n      // add yAxis\r\n      baseOptions.yAxis = this.yAxis(settings);\r\n      // series\r\n      baseOptions.series = this.series;\r\n      // add colors\r\n      baseOptions.colors = this.colors(settings);\r\n      // add tooltip\r\n      baseOptions.tooltip = this.tooltip(settings);\r\n\r\n      return baseOptions;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return fontsize in px\r\n   * @param string type\r\n   * @return Object\r\n   */\r\n  parseFontSize(settings, size) {\r\n    let fontSize = 11;\r\n\r\n    if (settings) {\r\n      fontSize = settings.fontSize;\r\n    }\r\n\r\n    if (size === 'smaller') {\r\n      return parseInt(fontSize, 10) - 2 + 'px';\r\n    }\r\n    return parseInt(fontSize, 10) + 'px';\r\n  }\r\n\r\n  /**\r\n   * Return number of decimals\r\n   * @param integer type\r\n   * @return Object\r\n   */\r\n  parseDecimals(settings) {\r\n    let decimalsValue = 0;\r\n\r\n    if (settings) {\r\n      decimalsValue = settings.decimalsValue;\r\n    }\r\n    return parseInt(decimalsValue, 10);\r\n  }\r\n\r\n  /**\r\n   * Return the correct chart type https://api.highcharts.com/highcharts/chart.type\r\n   * @param string type\r\n   * @return Object\r\n   */\r\n  chartType(type) {\r\n    return {\r\n      type: type\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return title, The chart's main title.\r\n   * https://api.highcharts.com/highcharts/title\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  title(settings) {\r\n    let chartTitle = '';\r\n\r\n    if (settings) {\r\n      chartTitle = settings.chartTitle;\r\n    }\r\n\r\n    return {\r\n      text: chartTitle,\r\n      style: {\r\n        fontSize: this.fontSize\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return subtitle, The chart's subtitle.\r\n   * This can be used both to display a subtitle below the main title, and to display random text anywhere in the chart.\r\n   * The subtitle can be updated after chart initialization through the Chart.setTitle method.\r\n   * https://api.highcharts.com/highcharts/subtitle\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  subtitle(settings) {\r\n    let chartSubtitle = '';\r\n\r\n    if (settings) {\r\n      chartSubtitle = settings.chartSubtitle;\r\n    }\r\n\r\n    return {\r\n      text: chartSubtitle,\r\n      style: {\r\n        fontSize: this.fontSizeSmaller\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return legend, The legend is a box containing a symbol and name for each series item or point item in the chart.\r\n   * Each series (or points in case of pie charts) is represented by a symbol and its name in the legend.\r\n   * https://api.highcharts.com/highcharts/legend\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  legend(settings) {\r\n    // set legend\r\n    // default = disabled\r\n    // if there are multiple series then enable\r\n    let legendEnabled = false;\r\n\r\n    // legenda position default onder\r\n    let align = 'center';\r\n    let verticalAlign = 'bottom';\r\n    let layout = 'horizontal';\r\n    let padding = 20;\r\n    let legendaPositie = 'boven';\r\n\r\n    if (settings) {\r\n      legendaPositie = settings.legendaPositie;\r\n    }\r\n\r\n    // always show legend if we should generate a pie like chart\r\n    if (this.numberOfSeries > 1) {\r\n      legendEnabled = true;\r\n    }\r\n\r\n    if (legendaPositie === 'rechts') {\r\n      align = 'right';\r\n      verticalAlign = 'top';\r\n      layout = 'vertical';\r\n    }\r\n\r\n    return {\r\n      enabled: legendEnabled,\r\n      align: align,\r\n      verticalAlign: verticalAlign,\r\n      layout: layout,\r\n      padding: padding,\r\n      itemStyle: {\r\n        fontSize: this.fontSize\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  plotoptions(settings) {\r\n    let stacked = false;\r\n    let colorByPoint = true;\r\n    let percentages = true;\r\n    let dataLabelsInside = false;\r\n    let type = '';\r\n\r\n    if (settings) {\r\n      stacked = settings.stacked;\r\n      percentages = settings.percentages;\r\n      type = settings.type;\r\n    }\r\n\r\n    // Do we need to stack the series?\r\n    if (stacked === true) {\r\n      stacked = 'percent';\r\n      dataLabelsInside = true;\r\n    }\r\n\r\n    // Don't show percentages in dataLabels if requested\r\n    if (percentages === false) {\r\n      percentages = false;\r\n    }\r\n\r\n    // Do we show multiple series, then color by serie instead of by point\r\n    if (type === 'series') {\r\n      colorByPoint = false;\r\n    }\r\n\r\n    return {\r\n      series: {\r\n        stacking: stacked,\r\n        colorByPoint: colorByPoint, // https://api.highcharts.com/highcharts/series.bar.colorByPoint\r\n        dataLabels: {\r\n          enabled: percentages, // https://api.highcharts.com/highcharts/series.bar.dataLabels.enabled\r\n          inside: dataLabelsInside, // https://api.highcharts.com/highcharts/series.bar.dataLabels.inside\r\n          format: '{y:.' + this.decimals + 'f}%',\r\n          style: {\r\n            fontSize: this.fontSize,\r\n            textOutline: 'none'\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return xAxis\r\n   * The X axis or category axis.\r\n   * Normally this is the horizontal axis, though if the chart is inverted this is the vertical axis.\r\n   * In case of multiple axes, the xAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/xAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  xAxis(settings) {\r\n    let gridLineWidth = 0;\r\n    let categories = [];\r\n    let visible = true;\r\n    let axis = true;\r\n    let type = 'serie';\r\n\r\n    if (settings) {\r\n      axis = settings.as;\r\n      type = settings.type;\r\n    }\r\n\r\n    // don't show xAxis if requested or when we parse series with one data point\r\n    if ((type === 'series' && this.numberOfDataPoints === 1) || axis === false) {\r\n      visible = false;\r\n    }\r\n\r\n    // are there categories? Show them\r\n    categories = this.categories.length > 0 ? this.categories : [];\r\n\r\n    return {\r\n      categories: categories,\r\n      visible: visible,\r\n      gridLineWidth: gridLineWidth,\r\n      minorGridLineWidth: gridLineWidth,\r\n      min: undefined,\r\n      max: undefined,\r\n      labels: {\r\n        style: {\r\n          color: 'black',\r\n          fontSize: this.fontSize\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return yAxis\r\n   * The Y axis or value axis.\r\n   * Normally this is the vertical axis, though if the chart is inverted this is the horizontal axis.\r\n   * In case of multiple axes, the yAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/yAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  yAxis(settings) {\r\n    let gridLineWidth = 0;\r\n    let visible = false;\r\n    let title = false;\r\n    let max = settings.scale > 0 ? settings.scale : undefined; // do we need a different scale?\r\n    let min = 0;\r\n    let raster = false;\r\n\r\n    if (settings) {\r\n      raster = settings.raster;\r\n    }\r\n\r\n    // hulplijnen tonen aan/uit\r\n    if (raster === true) {\r\n      visible = true;\r\n      gridLineWidth = 1;\r\n    }\r\n\r\n    return {\r\n      title: title,\r\n      visible: visible,\r\n      reversedStacks: false,\r\n      gridLineWidth: gridLineWidth,\r\n      minorGridLineWidth: gridLineWidth,\r\n      min: min,\r\n      max: max,\r\n      labels: {\r\n        style: {\r\n          color: 'black',\r\n          fontSize: this.fontSize\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return list of Generator\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  colors(settings) {\r\n    let numberOfColors = this.numberOfDataPoints;\r\n    let colorPalet = 'dr';\r\n\r\n    if (settings) {\r\n      colorPalet = settings.colorPalet;\r\n    }\r\n\r\n    // Show a table fomatted tooltip\r\n    if (this.numberOfSeries > 1) {\r\n      numberOfColors = this.numberOfSeries;\r\n    }\r\n\r\n    // initiate Color class\r\n    let Color = new ColorGenerator(colorPalet, numberOfColors);\r\n\r\n    return Color.renderColors();\r\n  }\r\n\r\n  /**\r\n   * Return tooltip\r\n   * Options for the tooltip that appears when the user hovers over a series or point.\r\n   * https://api.highcharts.com/highcharts/tooltip\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  tooltip(settings) {\r\n    let type = 'serie';\r\n\r\n    if (settings) {\r\n      type = settings.type;\r\n    }\r\n\r\n    // Show a table fomatted tooltip\r\n    if (type === 'series' && this.numberOfDataPoints > 1) {\r\n      return this.stackedTooltip(settings);\r\n    }\r\n\r\n    // Show a regular non table formatted tooltip\r\n    return this.notStackedTooltip(settings);\r\n  }\r\n\r\n  /**\r\n   * Return a table fomatted tooltip\r\n   * http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/tooltip/footerformat/\r\n   * https://api.highcharts.com/highcharts/tooltip.useHTML\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  stackedTooltip(settings) {\r\n    return {\r\n      headerFormat: '{point.key}<hr><table>',\r\n      pointFormat: '<tr><td>{series.name}: </td>' +\r\n            '<td style=\"text-align: right\">{point.y:.' + this.decimals + 'f}% / {point.n}</td></tr>',\r\n      footerFormat: '</table>',\r\n      useHTML: true,\r\n      shared: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a regular non html formatted tooltip\r\n   * https://api.highcharts.com/highcharts/tooltip.pointFormat\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  notStackedTooltip(settings) {\r\n    let pointFormat = '{series.name}: {point.y:.' + this.decimals + 'f}% <br> n = {point.n:.0f}';\r\n\r\n    /**\r\n     * Toon geen serie naam als er geen meerdere series zijn\r\n     */\r\n    if (settings.type === 'serie') {\r\n      pointFormat = '{point.y:.' + this.decimals + 'f}% <br> n = {point.n:.0f}';\r\n    }\r\n\r\n    return {\r\n      headerFormat: '',\r\n      pointFormat: pointFormat\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return exporting Options for the exporting module. For an overview on the matter, see\r\n   * https://api.highcharts.com/highcharts/exporting\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  exporting(exportSettings) {\r\n    let exportOptions = {\r\n      enabled: true,\r\n      chartOptions: {}\r\n    };\r\n\r\n    if (exportSettings) {\r\n      // change fontsize, only available when using baseoptions before other functions\r\n      this.fontSize = this.parseFontSize(exportSettings, 'default');\r\n      // smaller frontsize 2 px less then fontsize, only available when using baseoptions before other functions\r\n      this.fontSizeSmaller = this.parseFontSize(exportSettings, 'smaller');\r\n      // change decimals, only available when using baseoptions before other functions\r\n      this.decimals = this.parseDecimals(exportSettings);\r\n      // add type\r\n      exportOptions.chartOptions.chart = this.chartType(exportSettings.typeChart);\r\n      // add title\r\n      exportOptions.chartOptions.title = this.title(exportSettings);\r\n      // add subtitle\r\n      exportOptions.chartOptions.subtitle = this.subtitle(exportSettings);\r\n      // add legend\r\n      exportOptions.chartOptions.legend = this.legend(exportSettings);\r\n      // add plotOptions\r\n      exportOptions.chartOptions.plotOptions = this.plotoptions(exportSettings);\r\n      // add xAxis\r\n      exportOptions.chartOptions.xAxis = this.xAxis(exportSettings);\r\n      // add yAxis\r\n      exportOptions.chartOptions.yAxis = this.yAxis(exportSettings);\r\n      // add colors\r\n      exportOptions.chartOptions.colors = this.colors(exportSettings);\r\n\r\n      return exportOptions;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  parseData(data) {\r\n    for (let serieName of Object.keys(data)) {\r\n      let serie = {\r\n        'name': serieName,\r\n        'data': []\r\n      };\r\n\r\n      // loop over series to add categories and data\r\n      for (let element of data[serieName]) {\r\n        // add categories\r\n        if (this.categories.indexOf(element.name) === -1) {\r\n          this.categories.push(element.name);\r\n        }\r\n        // add data\r\n        serie.data.push({\r\n          y: element.data,\r\n          n: element.n\r\n        });\r\n        serie.y = element.data;\r\n      }\r\n\r\n      // count number of datapoints\r\n      this.numberOfDataPoints = serie.data.length;\r\n      // add new series to existing series\r\n      this.series.push(serie);\r\n    }\r\n    this.numberOfSeries = this.series.length;\r\n  }\r\n}\r\n\r\n// list of available settings\r\n// settings without custom export settings\r\n// {\r\n//   \"cumulatief\": \"aan\",\r\n//   \"hideCumulative\": false,\r\n//   \"typeChart\": \"bar\",\r\n//   \"stacked\": false,\r\n//   \"decimalsValue\": 0,\r\n//   \"legendaPositie\": \"onder\",\r\n//   \"colorPalet\": \"blauw-rood\",\r\n//   \"chartTitle\": \"\",\r\n//   \"chartSubtitle\": \"\",\r\n//   \"percentages\": true,\r\n//   \"as\": true,\r\n//   \"raster\": true,\r\n//   \"scale\": 0,\r\n//   \"fontSize\": 11,\r\n//   \"type\": \"serie\"\r\n// }\r\n// setting with custom export settings\r\n// {\r\n//   \"settings\": {\r\n//     \"cumulatief\": \"aan\",\r\n//     \"hideCumulative\": false,\r\n//     \"typeChart\": \"bar\",\r\n//     \"stacked\": false,\r\n//     \"decimalsValue\": 0,\r\n//     \"aPositie\": \"onder\",\r\n//     \"colorPalet\": \"blauw-rood\",\r\n//     \"chartTitle\": \"\",\r\n//     \"chartSubtitle\": \"\",\r\n//     \"percentages\": true,\r\n//     \"as\": true,\r\n//     \"raster\": true,\r\n//     \"scale\": 0,\r\n//     \"fontSize\": 11,\r\n//     \"type\": \"serie\"\r\n//   },\r\n//   \"export\": {\r\n//     \"cumulatief\": \"uit\",\r\n//     \"hideCumulative\": true,\r\n//     \"typeChart\": \"bar\",\r\n//     \"stacked\": false,\r\n//     \"decimalsValue\": 0,\r\n//     \"legendaPositie\": \"rechts\",\r\n//     \"colorPalet\": \"rood-blauw\",\r\n//     \"chartTitle\": \"\",\r\n//     \"chartSubtitle\": \"\",\r\n//     \"percentages\": false,\r\n//     \"as\": false,\r\n//     \"raster\": false,\r\n//     \"scale\": 100,\r\n//     \"fontSize\": 13,\r\n//     \"type\": \"series\"\r\n//   }\r\n// }\r\n","import Base from './base';\r\n\r\nexport default class Pie extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n    let plotOptions = this.plotoptions(settings);\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('pie');\r\n      // add pie plotoptions\r\n      baseOptions.plotOptions = this.piePlotoptions(settings, plotOptions);\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  piePlotoptions(settings, existingOptions) {\r\n    existingOptions.series = {\r\n      stacking: null,\r\n      colorByPoint: true\r\n    };\r\n    existingOptions.pie = {\r\n      cursor: 'pointer',\r\n      dataLabels: {\r\n        enabled: true,\r\n        format: '{y:.' + this.decimals + 'f}%',\r\n        distance: -30,\r\n        style: {\r\n          fontSize: this.fontSize,\r\n          textShadow: 'none',\r\n          textOutline: 'none'\r\n        }\r\n      },\r\n      showInLegend: true\r\n    };\r\n    return existingOptions;\r\n  }\r\n\r\n  parseData(data) {\r\n    for (let serieName of Object.keys(data)) {\r\n      let serie = {\r\n        name: serieName,\r\n        y: 0,\r\n        n: 0\r\n      };\r\n\r\n      // loop over series to add categories and data\r\n      for (let element of data[serieName]) {\r\n        // add categories\r\n        if (this.categories.indexOf(element.name) === -1) {\r\n          this.categories.push(element.name);\r\n        }\r\n        // add data\r\n        serie.y = element.data;\r\n        serie.n = element.n;\r\n      }\r\n\r\n      // count number of datapoints\r\n      this.numberOfDataPoints = 1;\r\n      // add new series to existing series\r\n      this.series.push(serie);\r\n    }\r\n    this.numberOfSeries = this.series.length;\r\n    // pi specific\r\n    let piedata = [{\r\n      data: this.series,\r\n      colorByPoint: true\r\n    }];\r\n\r\n    this.series = piedata;\r\n  }\r\n};\r\n","export function round(value, decimals) {\r\n  let result = Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r\n\r\n  return result >= 0 ? result : 0;\r\n}\r\n\r\nexport function lineIntersection(p0, p1, p2, p3) {\r\n\r\n  let p0X = p0.x;\r\n  let p0Y = p0.y;\r\n  let p1X = p1.x;\r\n  let p1Y = p1.y;\r\n  let p2X = p2.x;\r\n  let p2Y = p2.y;\r\n  let p3X = p3.x;\r\n  let p3Y = p3.y;\r\n  let s1X, s1Y, s2X, s2Y, s, t;\r\n\r\n  s1X = p1X - p0X;\r\n  s1Y = p1Y - p0Y;\r\n  s2X = p3X - p2X;\r\n  s2Y = p3Y - p2Y;\r\n\r\n  s = (-s1Y * (p0X - p2X) + s1X * (p0Y - p2Y)) / (-s2X * s1Y + s1X * s2Y);\r\n  t = (s2X * (p0Y - p2Y) - s2Y * (p0X - p2X)) / (-s2X * s1Y + s1X * s2Y);\r\n\r\n  if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\r\n    return [round(p0X + (t * s1X), 2), round(p0Y + (t * s1Y), 2)];\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function intersections(chart) {\r\n\r\n  let points1 = chart.series[0].points; // goedkoop\r\n  let points2 = chart.series[2].points; // duur\r\n  let points3 = chart.series[1].points; // te_goedkoop\r\n  let points4 = chart.series[3].points; // te_duur\r\n  let pointsInterSect1 = chart.series[4]; // IDP\r\n  let pointsInterSect2 = chart.series[5]; // OPS\r\n  let pointsInterSect3 = chart.series[6]; // MGP\r\n  let pointsInterSect4 = chart.series[7]; // MDP\r\n  let i1, intersect1, intersect2, intersect3, intersect4;\r\n\r\n  for (i1 = 1; i1 < points1.length; i1++) {\r\n    intersect1 = lineIntersection(points1[i1 - 1], points1[i1], points2[i1 - 1], points2[i1]);\r\n    intersect2 = lineIntersection(points3[i1 - 1], points3[i1], points4[i1 - 1], points4[i1]);\r\n    intersect3 = lineIntersection(points3[i1 - 1], points3[i1], points2[i1 - 1], points2[i1]);\r\n    intersect4 = lineIntersection(points1[i1 - 1], points1[i1], points4[i1 - 1], points4[i1]);\r\n\r\n    if (intersect1) {\r\n      pointsInterSect1.addPoint(intersect1, false, false);\r\n    }\r\n    if (intersect2) {\r\n      pointsInterSect2.addPoint(intersect2, false, false);\r\n    }\r\n    if (intersect3) {\r\n      pointsInterSect3.addPoint(intersect3, false, false);\r\n    }\r\n    if (intersect4) {\r\n      pointsInterSect4.addPoint(intersect4, false, false);\r\n    }\r\n  }\r\n  // Functional but disabled for now ;-)\r\n  // addLabelsToIntersection(pointsInterSect1, 'IDP', chart, 30, 35);\r\n  // addLabelsToIntersection(pointsInterSect2, 'OPS', chart, -30, -35);\r\n  // addLabelsToIntersection(pointsInterSect3, 'MGP', chart, 30, 35);\r\n  // addLabelsToIntersection(pointsInterSect4, 'MDP', chart, -30, -35);\r\n  // redraw\r\n  chart.redraw();\r\n}\r\n","import Pie from './pie';\r\n\r\nexport default class Nps extends Pie {\r\n  constructor(data) {\r\n    super(data);\r\n  }\r\n};\r\n","import Base from './base';\r\n\r\nexport default class Column extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('column');\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n}\r\n","import Base from './base';\r\n\r\nexport default class Prijsmeter extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseNpsData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('line');\r\n      // add plotoptions\r\n      baseOptions.plotOptions = this.plotoptions(settings);\r\n      // add xAxis\r\n      baseOptions.xAxis = this.xAxis(settings);\r\n      // add yAxis\r\n      baseOptions.yAxis = this.yAxis(settings);\r\n      // add colors\r\n      baseOptions.colors = this.colors(settings);\r\n      // add tooltip\r\n      baseOptions.tooltip = this.tooltip(settings);\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n  /**\r\n   * Return list of Generator\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  colors(settings) {\r\n    return ['#009bd5', '#e2001a', '#57ab27', '#ffcc00'];\r\n  }\r\n\r\n  /**\r\n   * Return plotoptions, a wrapper object for config objects for each series type\r\n   * https://api.highcharts.com/highcharts/plotOptions\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  plotoptions(settings) {\r\n    return {\r\n      line: {\r\n        marker: {\r\n          enabled: false\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return xAxis\r\n   * The X axis or category axis.\r\n   * Normally this is the horizontal axis, though if the chart is inverted this is the vertical axis.\r\n   * In case of multiple axes, the xAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/xAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  xAxis(settings) {\r\n    let categories = [];\r\n\r\n    // are there categories? Show them\r\n    categories = this.categories.length > 0 ? this.categories : [];\r\n\r\n    return {\r\n      categories: categories,\r\n      labels: {\r\n        formatter: function () {\r\n          return Number(this.value); // remove ending zeros\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return tooltip\r\n   * Options for the tooltip that appears when the user hovers over a series or point.\r\n   * https://api.highcharts.com/highcharts/tooltip\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  tooltip(settings) {\r\n    let decimals = this.parseDecimals(settings);\r\n\r\n    return {\r\n      formatter: function () {\r\n        let value = this.key;\r\n        let startValue, stepSize;\r\n\r\n        // er kunnen numerieke en textuele nummers terug komen van highcharts\r\n        // de textuele kunnen direct doorgezet worden, de numerieke moeten uitgerekend worden\r\n        if (typeof this.x === 'number') {\r\n          startValue = Number(this.point.series.xAxis.categories[0]);\r\n          stepSize = Number(Number(this.point.series.xAxis.categories[1]) - startValue);\r\n          value = Number(startValue + Number(Number(stepSize) * Number(this.x)));\r\n        }\r\n\r\n        return '<span style=\"font-size:10px\">' + this.series.name + '</span><table><br>' +\r\n          '<tr> <span style=\"font-size:10px\">' +\r\n          Number(value) + ': </span><table> <td style=\"padding:0;font-size:10px\">' +\r\n          this.y.toFixed(decimals) + '%</td></tr>';\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return yAxis\r\n   * The Y axis or value axis.\r\n   * Normally this is the vertical axis, though if the chart is inverted this is the horizontal axis.\r\n   * In case of multiple axes, the yAxis node is an array of configuration objects.\r\n   * https://api.highcharts.com/highcharts/yAxis\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  yAxis(settings) {\r\n    return {\r\n      title: {\r\n        text: ''\r\n      },\r\n      max: 100\r\n    };\r\n  }\r\n\r\n  parseNpsData(data) {\r\n    this.parseData(data);\r\n    // add intersection points\r\n    let intersections = [{\r\n      name: 'IDP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'OPS',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'MGP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    },\r\n    {\r\n      name: 'MDP',\r\n      showInLegend: false,\r\n      data: [],\r\n      type: 'scatter'\r\n    }];\r\n\r\n    // push intersections to series\r\n    this.series = this.series.concat(intersections);\r\n  }\r\n}\r\n","import Base from './base';\r\n\r\nexport default class Bar extends Base {\r\n  constructor(data) {\r\n    super();\r\n    this.parseData(data);\r\n  }\r\n  renderOptions(settings, exportSettings) {\r\n    let baseOptions = {};\r\n\r\n    if (this.series.length > 0) {\r\n      baseOptions = this.baseOptions(settings);\r\n      // add type\r\n      baseOptions.chart = this.chartType('bar');\r\n\r\n      // add export specific options\r\n      if (exportSettings !== null) {\r\n        baseOptions.exporting = this.exporting(exportSettings);\r\n      }\r\n    }\r\n    return baseOptions;\r\n  }\r\n\r\n}\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","// Import chroma js\r\nimport Chroma from 'chroma-js';\r\n\r\nexport default class Colors {\r\n  constructor(type, numberOfColors) {\r\n    this.type = type;\r\n    this.numberOfColors = numberOfColors;\r\n  }\r\n\r\n  /**\r\n   * Return list of colors\r\n   * An array containing the default colors for the chart's series.\r\n   * When all colors are used, new colors are pulled from the start again.\r\n   * https://api.highcharts.com/highcharts/colors\r\n   * @param Object settings\r\n   * @return Object\r\n   */\r\n  renderColors() {\r\n    // Show a table fomatted tooltip\r\n    if (this.type === 'dr') {\r\n      return this.drColors();\r\n    }\r\n    if (this.type === 'rood-blauw') {\r\n      return this.redBlueColors(false);\r\n    }\r\n    if (this.type === 'blauw-rood') {\r\n      return this.redBlueColors(true);\r\n    }\r\n    if (this.type === 'rood') {\r\n      return this.redColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'blauw') {\r\n      return this.blueColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'groen') {\r\n      return this.greenColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'oranje') {\r\n      return this.orangeColors(this.numberOfColors, 3);\r\n    }\r\n    if (this.type === 'rood-mono') {\r\n      return ['#e2001a'];\r\n    }\r\n    if (this.type === 'blauw-mono') {\r\n      return ['#009bd5'];\r\n    }\r\n    if (this.type === 'groen-mono') {\r\n      return ['#57ab27'];\r\n    }\r\n    if (this.type === 'oranje-mono') {\r\n      return ['#ed8c00'];\r\n    }\r\n    return Chroma.scale(['#4f0700', '#e2001a', '#f6b2ba']).colors(this.numberOfColors);\r\n  }\r\n\r\n  drColors() {\r\n    let numberOfColors = this.numberOfColors / 5;\r\n    let rood = this.redColors(numberOfColors, 2);\r\n    let blauw = this.blueColors(numberOfColors, 2);\r\n    let groen = this.greenColors(numberOfColors, 2);\r\n    let geel = this.yellowColors(numberOfColors, 2);\r\n    let zwart = this.blackColors(numberOfColors, 2);\r\n    let colorsDr = [];\r\n    let counter = 0;\r\n\r\n    for (counter = 0; counter < numberOfColors; counter++) {\r\n      colorsDr.push(rood[counter]);\r\n      colorsDr.push(blauw[counter]);\r\n      colorsDr.push(groen[counter]);\r\n      colorsDr.push(geel[counter]);\r\n      colorsDr.push(zwart[counter]);\r\n    }\r\n\r\n    return colorsDr;\r\n  }\r\n\r\n  redBlueColors(reversed) {\r\n    let numberOfColors = this.numberOfColors / 2;\r\n    let rood = this.redColors(numberOfColors, 2);\r\n    let blauw = this.blueColors(numberOfColors, 2);\r\n    var roodReversed = this.redColors(numberOfColors).reverse();\r\n    var blauwReversed = this.blueColors(numberOfColors).reverse();\r\n\r\n    if (reversed) {\r\n      return blauw.concat(roodReversed);\r\n    }\r\n    return rood.concat(blauwReversed);\r\n  }\r\n\r\n  redColors(numberOfColors, spread) {\r\n    let colors = ['#e2001a', '#f6b2ba'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#4f0700', '#e2001a', '#f6b2ba'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  blueColors(numberOfColors, spread) {\r\n    let colors = ['#009bd5', '#b2e1f2'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#003349', '#009bd5', '#b2e1f2'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  greenColors(numberOfColors, spread) {\r\n    let colors = ['#57ab27', '#cce6be'];\r\n\r\n    if (spread === 3) {\r\n      colors = ['#22440f', '#57ab27', '#cce6be'];\r\n    }\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  yellowColors(numberOfColors, spread) {\r\n    let colors = ['#ffcc00', '#fff0b2'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  orangeColors(numberOfColors, spread) {\r\n    let colors = ['#ad5103', '#ed8c00', '#f7c69c'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n\r\n  blackColors(numberOfColors, spread) {\r\n    let colors = ['#000000', '#b2b2b2'];\r\n\r\n    return Chroma.scale(colors).colors(numberOfColors);\r\n  }\r\n}\r\n","import Pie from './pie.js';\r\nimport Bar from './bar.js';\r\nimport Prijsmeter from './prijsmeter.js';\r\nimport Column from './column.js';\r\nimport Nps from './nps.js';\r\n\r\nexport default class Chart {\r\n  chartOptions(settings, exportSettings, data) {\r\n    let chartType = settings.typeChart;\r\n    let chartObject = null;\r\n\r\n    // check if valid chartType is given\r\n    if (!this.validateChartType(chartType)) {\r\n      alert('no valid chart type is given');\r\n    }\r\n    // check if valid data is given\r\n    if (typeof data !== 'object') {\r\n      alert('no valid data is given');\r\n    }\r\n    // render pie\r\n    if (chartType === 'pie') {\r\n      chartObject = new Pie(data);\r\n    }\r\n    // render nps\r\n    if (chartType === 'nps') {\r\n      chartObject = new Nps(data);\r\n    }\r\n    // render bar\r\n    if (chartType === 'bar') {\r\n      chartObject = new Bar(data);\r\n    }\r\n    // render prijsmeter\r\n    if (chartType === 'line') {\r\n      chartObject = new Prijsmeter(data);\r\n    }\r\n    // render column\r\n    if (chartType === 'column') {\r\n      chartObject = new Column(data);\r\n    }\r\n\r\n    return chartObject.renderOptions(settings, exportSettings);\r\n  }\r\n\r\n  validateChartType(chartType) {\r\n    let validTypes = ['bar', 'column', 'line', 'pie', 'nps'];\r\n\r\n    return validTypes.indexOf(chartType) >= 0;\r\n  }\r\n};\r\n","import Chart from './chart.js';\r\nimport { intersections } from './callbacks.js';\r\n\r\nexport { Chart, intersections };\r\n"],"sourceRoot":""}